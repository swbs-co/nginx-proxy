name: DockerHub

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 1'
  push:
    branches:
      - main
      - dev
    tags:
      - '*.*.*'
    paths-ignore:
      - 'test/*'
      - '.gitignore'
      - '.travis.yml'
      - 'docker-compose-separate-containers.yml'
      - 'docker-compose.yml'
      - 'LICENSE'
      - 'Makefile'
      - '*.md'

jobs:
  multiarch-build-debian:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Retrieve version
        run: echo "GIT_DESCRIBE=$(git describe --tags)" >> $GITHUB_ENV

      - name: Get Docker tags for Debian based image
        id: docker_meta_debian
        uses: docker/metadata-action@v3
        with:
          images: |
            nginxproxy/nginx-proxy
            jwilder/nginx-proxy
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=dev,enable=${{ github.ref == 'refs/heads/dev' }}
          labels: |
            org.opencontainers.image.authors=Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder
            org.opencontainers.image.version=${{ env.GIT_DESCRIBE }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push the Debian based image
        if: github.ref == 'refs/heads/main'
        id: docker_build_debian
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          build-args: NGINX_PROXY_VERSION=${{ env.GIT_DESCRIBE }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.docker_meta_debian.outputs.tags }}
          labels: ${{ steps.docker_meta_debian.outputs.labels }}

      - name: Images digests
        if: github.ref == 'refs/heads/main'
        run: echo ${{ steps.docker_build_debian.outputs.digest }}

      - name: Build and push the Debian based dev image
        if: github.ref == 'refs/heads/dev'
        id: docker_build_debian_dev
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile
          build-args: DOCKER_GEN_VERSION=main
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.docker_meta_debian.outputs.tags }}
          labels: ${{ steps.docker_meta_debian.outputs.labels }}
      
      - name: Images digests
        if: github.ref == 'refs/heads/dev'
        run: echo ${{ steps.docker_build_debian_dev.outputs.digest }}

  multiarch-build-alpine:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Retrieve version
        run: echo "GIT_DESCRIBE=$(git describe --tags)" >> $GITHUB_ENV

      - name: Get Docker tags for Alpine based image
        id: docker_meta_alpine
        uses: docker/metadata-action@v3
        with:
          images: |
            nginxproxy/nginx-proxy
            jwilder/nginx-proxy
          tags: |
            type=semver,suffix=-alpine,pattern={{version}}
            type=semver,suffix=-alpine,pattern={{major}}.{{minor}}
            type=raw,value=alpine,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=dev-alpine,enable=${{ github.ref == 'refs/heads/dev' }}
          labels: |
            org.opencontainers.image.authors=Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder
            org.opencontainers.image.version=${{ env.GIT_DESCRIBE }}
          flavor: latest=false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push the Alpine based image
        if: github.ref == 'refs/heads/main'
        id: docker_build_alpine
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.alpine
          build-args: NGINX_PROXY_VERSION=${{ env.GIT_DESCRIBE }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.docker_meta_alpine.outputs.tags }}
          labels: ${{ steps.docker_meta_alpine.outputs.labels }}

      - name: Images digests
        if: github.ref == 'refs/heads/main'
        run: echo ${{ steps.docker_build_alpine.outputs.digest }}
      
      - name: Build and push the Alpine based dev image
        if: github.ref == 'refs/heads/dev'
        id: docker_build_alpine_dev
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile.alpine
          build-args: DOCKER_GEN_VERSION=main
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.docker_meta_alpine.outputs.tags }}
          labels: ${{ steps.docker_meta_alpine.outputs.labels }}

      - name: Images digests
        if: github.ref == 'refs/heads/dev'
        run: echo ${{ steps.docker_build_alpine_dev.outputs.digest }}
